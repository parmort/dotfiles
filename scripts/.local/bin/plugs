#!/bin/bash

GREEN='\033[0;32m'
NC='\033[0m'

_plug_remove() {
  [ -z "$1" ] && echo "Path to a submodule needed" 1>&2 && exit 1

  case "${1%%/*}" in
    nvim) local path=.git/modules/vim ;;
    zsh) local path=.git/modules/zsh ;;
    *) echo "Unknown type '${1%%/*}'" && exit 1 ;;
  esac

  git submodule deinit -f $1
  rm -rf $path/${1##*/}
  git rm -f $1
}

_plug_update() {
  case "$1" in
    vim)
      git submodule foreach '
        if [ "${sm_path##nvim/.config/nvim/pack/bundle/opt/}" != "$sm_path" ]; then
          echo "$(git submodule update --remote --merge)"
          vim -c "helptags ALL" -c "q"
        else
          echo "  Leaving $sm_path"
        fi
      '
      ;;
    zsh)
      git submodule foreach '
        if [ "${sm_path##zsh/.config/zsh/plugs/}" != "$sm_path" ]; then
          git submodule update --remote --merge
          echo -e "  \033[0;32mUpdating $sm_path\033[0m"
        else
          echo "  Leaving $sm_path"
        fi
      '
      ;;
    *)
      echo "Unknown type '$1'" 1>&2
      exit 1
      ;;
  esac
}

_plug_add() {
  case "$2" in
    vim)
      cd $(git rev-parse --show-toplevel)/nvim/.config/nvim/pack/bundle/opt
      ;;
    zsh)
      cd $(git rev-parse --show-toplevel)/zsh/.config/zsh/plugs
      ;;
    *)
      echo "Unknown type '$2'" 1>&2
      exit 1
      ;;
  esac

  git submodule add --name $2/$4 https://github.com/$3/$4
  vim -c "helptags ALL" -c "q"
}

_plug_add_ssh() {
  case "$2" in
    vim)
      cd $(git rev-parse --show-toplevel)/nvim/.config/nvim/pack/bundle/opt
      ;;
    zsh)
      cd $(git rev-parse --show-toplevel)/zsh/.config/zsh/plugs
      ;;
    *)
      echo "Unknown type '$2'" 1>&2
      exit 1
      ;;
  esac

  git submodule add --name $2/$4 git@github.com:$3/$4
  vim -c "helptags ALL" -c "q"
}

_plug_list() {
  case "$1" in
    vim)
      git submodule status | grep "vim" | awk '{print $2}' | cut -c 35- | less
      ;;
    zsh)
      git submodule status | grep "zsh" | awk '{print $2}' | cut -c 23- | less
      ;;
    *)
      git submodule status | awk '{print $2}' | less
  esac
}

case "$1" in
  add) _plug_add "$@" ;;
  add-ssh) _plug_add_ssh "$@" ;;
  list) _plug_list $2 ;;
  update) _plug_update $2 ;;
  rm) _plug_remove $2 ;;
  *)
    echo "Option '$1' not recognized" 1>&2
    exit 1
    ;;
esac
